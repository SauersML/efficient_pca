[package]
name = "efficient_pca"
version = "0.1.7"
authors = ["Erik Garrison <erik.garrison@gmail.com>, SauersML"]
edition = "2021"
description = "Principal component computation using SVD and covariance matrix trick"
license = "MIT"
repository = "https://github.com/SauersML/efficient_pca"
readme = "README.md"

keywords = [
    "pca",
    "genomics",
    "svd",
    "bioinformatics",
    "machine-learning",
]

categories = [
    "algorithms",
    "mathematics",
    "science",
    "science::bioinformatics",
    "science::bioinformatics::genomics",
]

documentation = "https://github.com/SauersML/efficient_pca"

[dependencies]
bincode = { version = "2.0.1", features = ["serde"] }
bytemuck = { version = "1.18.0", features = ["derive"] }
dyn-stack = { version = "0.13.0", features = ["alloc"] }
faer = { version = "0.22.6", optional = true }
float-cmp = "0.10.0"
log = "0.4.27"
ndarray = { version = "0.16.1", features = ["serde", "rayon"] }
ndarray-linalg = { version = "0.17.0", default-features = false }
ndarray-rand = "0.15.0"
rand = "0.8.5"
rand_chacha = "0.3.1"
rand_distr = "0.4.3"
rayon = "1.10.0"
serde = { version = "1.0.219", features = ["derive"] }
sysinfo = "0.33.1"
tempfile = "3.20.0"
jemalloc-ctl = { version = "0.5.4", optional = true }
once_cell = "1.21.3"

[lib]
name = "efficient_pca"
path = "src/lib.rs"

[dev-dependencies]
dirs = "6.0.0"
reqwest = { version = "0.12.15", features = ["blocking"] }
tar = "0.4.44"
zstd = "0.13.3"
criterion = { version = "0.6.0", features = ["html_reports"] }
ctor = "0.4.2"
approx = "0.5.1"
linfa = "0.7.1"
linfa-reduction = "0.7.1"
ndarray_v15 = { version = "0.15.6", package = "ndarray" }
jemallocator = "0.5"
lazy_static = "1.5.0"
serde_json = "1.0"

[features]
default = ["backend_openblas"]
jemalloc = ["jemalloc-ctl"]
backend_openblas = ["ndarray-linalg/openblas-static"]
backend_mkl = ["ndarray-linalg/intel-mkl-static"]
backend_faer = ["faer_links_ndarray_static_openblas"]
faer_links_ndarray_static_openblas = [
    "dep:faer",
    "ndarray-linalg/openblas-static"
]
enable-eigensnp-diagnostics = []

[[bench]]
name = "benchmarks"
harness = false
